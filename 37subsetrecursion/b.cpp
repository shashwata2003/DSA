#include<iostream>
#include <bits/stdc++.h>
#include <array>
using namespace std;
/* 
 Subsequences of String:
 You are given a string 'STR' containing lowercase English letters from a to z inclusive. Your 
 task is to find all non-empty possible subsequences of 'STR'.
A Subsequence of a string is the one which is generated by deleting 0 or more letters from the string 
and keeping the rest of the letters in the same order.
in: abc
out: a ab abc ac b bc c

Sol: this will be same as the previous question but just in string same exclude and include method
 */
void solve(string arr, vector<string> &ans, string out, int index){
    if (index >= arr.length())
    {
        ans.push_back(out);
        return ;
    }
    //exclude: 
    solve(arr,ans,out,index+1);
    //include:
    char ele = arr[index];
    out.push_back(ele);
    solve(arr,ans,out,index+1);
    
}

int main(){
    string arr = "abc";
    vector<string> ans ;
    string out = "";
    int index = 0;
    solve(arr,ans,out,index);
    for (int i = 0; i < ans.size(); i++)
    {
        cout<<ans[i]<<" ";
    }
    

return 0;
}